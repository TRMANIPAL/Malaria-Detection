{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPI8WVAGFKI4lb4Dur0L65R"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":73},"id":"q4VmCgY8o3bR","executionInfo":{"status":"ok","timestamp":1710685786173,"user_tz":-330,"elapsed":199444,"user":{"displayName":"Manipal Reddy","userId":"17555613462873054626"}},"outputId":"658132b4-7f51-47af-9731-f3a85f9597c1"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-9ae558b9-2a00-49b9-a36d-cbcd8ae29b46\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-9ae558b9-2a00-49b9-a36d-cbcd8ae29b46\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script>// Copyright 2017 Google LLC\n","//\n","// Licensed under the Apache License, Version 2.0 (the \"License\");\n","// you may not use this file except in compliance with the License.\n","// You may obtain a copy of the License at\n","//\n","//      http://www.apache.org/licenses/LICENSE-2.0\n","//\n","// Unless required by applicable law or agreed to in writing, software\n","// distributed under the License is distributed on an \"AS IS\" BASIS,\n","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n","// See the License for the specific language governing permissions and\n","// limitations under the License.\n","\n","/**\n"," * @fileoverview Helpers for google.colab Python module.\n"," */\n","(function(scope) {\n","function span(text, styleAttributes = {}) {\n","  const element = document.createElement('span');\n","  element.textContent = text;\n","  for (const key of Object.keys(styleAttributes)) {\n","    element.style[key] = styleAttributes[key];\n","  }\n","  return element;\n","}\n","\n","// Max number of bytes which will be uploaded at a time.\n","const MAX_PAYLOAD_SIZE = 100 * 1024;\n","\n","function _uploadFiles(inputId, outputId) {\n","  const steps = uploadFilesStep(inputId, outputId);\n","  const outputElement = document.getElementById(outputId);\n","  // Cache steps on the outputElement to make it available for the next call\n","  // to uploadFilesContinue from Python.\n","  outputElement.steps = steps;\n","\n","  return _uploadFilesContinue(outputId);\n","}\n","\n","// This is roughly an async generator (not supported in the browser yet),\n","// where there are multiple asynchronous steps and the Python side is going\n","// to poll for completion of each step.\n","// This uses a Promise to block the python side on completion of each step,\n","// then passes the result of the previous step as the input to the next step.\n","function _uploadFilesContinue(outputId) {\n","  const outputElement = document.getElementById(outputId);\n","  const steps = outputElement.steps;\n","\n","  const next = steps.next(outputElement.lastPromiseValue);\n","  return Promise.resolve(next.value.promise).then((value) => {\n","    // Cache the last promise value to make it available to the next\n","    // step of the generator.\n","    outputElement.lastPromiseValue = value;\n","    return next.value.response;\n","  });\n","}\n","\n","/**\n"," * Generator function which is called between each async step of the upload\n"," * process.\n"," * @param {string} inputId Element ID of the input file picker element.\n"," * @param {string} outputId Element ID of the output display.\n"," * @return {!Iterable<!Object>} Iterable of next steps.\n"," */\n","function* uploadFilesStep(inputId, outputId) {\n","  const inputElement = document.getElementById(inputId);\n","  inputElement.disabled = false;\n","\n","  const outputElement = document.getElementById(outputId);\n","  outputElement.innerHTML = '';\n","\n","  const pickedPromise = new Promise((resolve) => {\n","    inputElement.addEventListener('change', (e) => {\n","      resolve(e.target.files);\n","    });\n","  });\n","\n","  const cancel = document.createElement('button');\n","  inputElement.parentElement.appendChild(cancel);\n","  cancel.textContent = 'Cancel upload';\n","  const cancelPromise = new Promise((resolve) => {\n","    cancel.onclick = () => {\n","      resolve(null);\n","    };\n","  });\n","\n","  // Wait for the user to pick the files.\n","  const files = yield {\n","    promise: Promise.race([pickedPromise, cancelPromise]),\n","    response: {\n","      action: 'starting',\n","    }\n","  };\n","\n","  cancel.remove();\n","\n","  // Disable the input element since further picks are not allowed.\n","  inputElement.disabled = true;\n","\n","  if (!files) {\n","    return {\n","      response: {\n","        action: 'complete',\n","      }\n","    };\n","  }\n","\n","  for (const file of files) {\n","    const li = document.createElement('li');\n","    li.append(span(file.name, {fontWeight: 'bold'}));\n","    li.append(span(\n","        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n","        `last modified: ${\n","            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n","                                    'n/a'} - `));\n","    const percent = span('0% done');\n","    li.appendChild(percent);\n","\n","    outputElement.appendChild(li);\n","\n","    const fileDataPromise = new Promise((resolve) => {\n","      const reader = new FileReader();\n","      reader.onload = (e) => {\n","        resolve(e.target.result);\n","      };\n","      reader.readAsArrayBuffer(file);\n","    });\n","    // Wait for the data to be ready.\n","    let fileData = yield {\n","      promise: fileDataPromise,\n","      response: {\n","        action: 'continue',\n","      }\n","    };\n","\n","    // Use a chunked sending to avoid message size limits. See b/62115660.\n","    let position = 0;\n","    do {\n","      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n","      const chunk = new Uint8Array(fileData, position, length);\n","      position += length;\n","\n","      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n","      yield {\n","        response: {\n","          action: 'append',\n","          file: file.name,\n","          data: base64,\n","        },\n","      };\n","\n","      let percentDone = fileData.byteLength === 0 ?\n","          100 :\n","          Math.round((position / fileData.byteLength) * 100);\n","      percent.textContent = `${percentDone}% done`;\n","\n","    } while (position < fileData.byteLength);\n","  }\n","\n","  // All done.\n","  yield {\n","    response: {\n","      action: 'complete',\n","    }\n","  };\n","}\n","\n","scope.google = scope.google || {};\n","scope.google.colab = scope.google.colab || {};\n","scope.google.colab._files = {\n","  _uploadFiles,\n","  _uploadFilesContinue,\n","};\n","})(self);\n","</script> "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving movieticket.csv to movieticket.csv\n"]}],"source":["from google.colab import files\n","adfile=files.upload()"]},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from scipy.stats import skew\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import LabelEncoder\n","from sklearn.linear_model import LinearRegression\n","from sklearn.preprocessing import PolynomialFeatures\n","from xgboost import XGBRegressor\n","from sklearn.metrics import r2_score\n","import warnings\n","warnings.filterwarnings('ignore')\n"],"metadata":{"id":"Z8qQuu7CpM1_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df=pd.read_csv(\"movieticket.csv\")\n","df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"ddvQmaKHpOEE","executionInfo":{"status":"ok","timestamp":1710685800442,"user_tz":-330,"elapsed":671,"user":{"displayName":"Manipal Reddy","userId":"17555613462873054626"}},"outputId":"a92b01bf-ee3b-4435-ba70-ca2daededf7e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   film_code  cinema_code  total_sales  tickets_sold  tickets_out  show_time  \\\n","0       1492          304      3900000            26            0          4   \n","1       1492          352      3360000            42            0          5   \n","2       1492          489      2560000            32            0          4   \n","3       1492          429      1200000            12            0          1   \n","4       1492          524      1200000            15            0          3   \n","\n","   occu_perc  ticket_price  ticket_use    capacity        date  month  \\\n","0       4.26      150000.0          26  610.328639  05-05-2018      5   \n","1       8.08       80000.0          42  519.801980  05-05-2018      5   \n","2      20.00       80000.0          32  160.000000  05-05-2018      5   \n","3      11.01      100000.0          12  108.991826  05-05-2018      5   \n","4      16.67       80000.0          15   89.982004  05-05-2018      5   \n","\n","   quarter  day  \n","0        2    5  \n","1        2    5  \n","2        2    5  \n","3        2    5  \n","4        2    5  "],"text/html":["\n","  <div id=\"df-498db537-805e-4584-bd24-80f3b8177f72\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>film_code</th>\n","      <th>cinema_code</th>\n","      <th>total_sales</th>\n","      <th>tickets_sold</th>\n","      <th>tickets_out</th>\n","      <th>show_time</th>\n","      <th>occu_perc</th>\n","      <th>ticket_price</th>\n","      <th>ticket_use</th>\n","      <th>capacity</th>\n","      <th>date</th>\n","      <th>month</th>\n","      <th>quarter</th>\n","      <th>day</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1492</td>\n","      <td>304</td>\n","      <td>3900000</td>\n","      <td>26</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>4.26</td>\n","      <td>150000.0</td>\n","      <td>26</td>\n","      <td>610.328639</td>\n","      <td>05-05-2018</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1492</td>\n","      <td>352</td>\n","      <td>3360000</td>\n","      <td>42</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>8.08</td>\n","      <td>80000.0</td>\n","      <td>42</td>\n","      <td>519.801980</td>\n","      <td>05-05-2018</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>1492</td>\n","      <td>489</td>\n","      <td>2560000</td>\n","      <td>32</td>\n","      <td>0</td>\n","      <td>4</td>\n","      <td>20.00</td>\n","      <td>80000.0</td>\n","      <td>32</td>\n","      <td>160.000000</td>\n","      <td>05-05-2018</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1492</td>\n","      <td>429</td>\n","      <td>1200000</td>\n","      <td>12</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>11.01</td>\n","      <td>100000.0</td>\n","      <td>12</td>\n","      <td>108.991826</td>\n","      <td>05-05-2018</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>1492</td>\n","      <td>524</td>\n","      <td>1200000</td>\n","      <td>15</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>16.67</td>\n","      <td>80000.0</td>\n","      <td>15</td>\n","      <td>89.982004</td>\n","      <td>05-05-2018</td>\n","      <td>5</td>\n","      <td>2</td>\n","      <td>5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-498db537-805e-4584-bd24-80f3b8177f72')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-498db537-805e-4584-bd24-80f3b8177f72 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-498db537-805e-4584-bd24-80f3b8177f72');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fde86c6f-13f8-481d-87f7-4ab0f8fb6953\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fde86c6f-13f8-481d-87f7-4ab0f8fb6953')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fde86c6f-13f8-481d-87f7-4ab0f8fb6953 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":320},"id":"lZ4AZBiqqQH4","executionInfo":{"status":"ok","timestamp":1710685803349,"user_tz":-330,"elapsed":10,"user":{"displayName":"Manipal Reddy","userId":"17555613462873054626"}},"outputId":"34f22b5a-553b-4530-f339-9d30e8c6dde0"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           film_code    cinema_code   total_sales   tickets_sold  \\\n","count  142524.000000  142524.000000  1.425240e+05  142524.000000   \n","mean     1518.985111     320.378427  1.234728e+07     140.137570   \n","std        36.184450     159.701229  3.065486e+07     279.758733   \n","min      1471.000000      32.000000  2.000000e+04       1.000000   \n","25%      1485.000000     181.000000  1.260000e+06      18.000000   \n","50%      1498.000000     324.000000  3.720000e+06      50.000000   \n","75%      1556.000000     474.000000  1.110000e+07     143.000000   \n","max      1589.000000     637.000000  1.262820e+09    8499.000000   \n","\n","         tickets_out      show_time      occu_perc   ticket_price  \\\n","count  142524.000000  142524.000000  142399.000000  142524.000000   \n","mean        0.237413       3.932103      19.965986   81234.599886   \n","std         2.923206       3.056276      22.653445   33236.599278   \n","min         0.000000       1.000000       0.000000     483.870968   \n","25%         0.000000       2.000000       3.750000   60000.000000   \n","50%         0.000000       3.000000      10.350000   79454.235180   \n","75%         0.000000       5.000000      28.210000  100000.000000   \n","max       311.000000      60.000000     147.500000  700000.000000   \n","\n","          ticket_use       capacity          month        quarter  \\\n","count  142524.000000  142399.000000  142524.000000  142524.000000   \n","mean      139.900157     854.723605       6.776852       2.634721   \n","std       279.564935     953.118103       2.195843       0.809692   \n","min      -219.000000      -2.000000       2.000000       1.000000   \n","25%        18.000000     276.994486       5.000000       2.000000   \n","50%        50.000000     525.714286       7.000000       3.000000   \n","75%       143.000000    1038.961039       9.000000       3.000000   \n","max      8499.000000    9692.097160      11.000000       4.000000   \n","\n","                 day  \n","count  142524.000000  \n","mean       16.112585  \n","std         8.949471  \n","min         1.000000  \n","25%         8.000000  \n","50%        16.000000  \n","75%        24.000000  \n","max        31.000000  "],"text/html":["\n","  <div id=\"df-413450bc-d1f9-4f80-b563-78e252f04b59\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>film_code</th>\n","      <th>cinema_code</th>\n","      <th>total_sales</th>\n","      <th>tickets_sold</th>\n","      <th>tickets_out</th>\n","      <th>show_time</th>\n","      <th>occu_perc</th>\n","      <th>ticket_price</th>\n","      <th>ticket_use</th>\n","      <th>capacity</th>\n","      <th>month</th>\n","      <th>quarter</th>\n","      <th>day</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>142524.000000</td>\n","      <td>142524.000000</td>\n","      <td>1.425240e+05</td>\n","      <td>142524.000000</td>\n","      <td>142524.000000</td>\n","      <td>142524.000000</td>\n","      <td>142399.000000</td>\n","      <td>142524.000000</td>\n","      <td>142524.000000</td>\n","      <td>142399.000000</td>\n","      <td>142524.000000</td>\n","      <td>142524.000000</td>\n","      <td>142524.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>1518.985111</td>\n","      <td>320.378427</td>\n","      <td>1.234728e+07</td>\n","      <td>140.137570</td>\n","      <td>0.237413</td>\n","      <td>3.932103</td>\n","      <td>19.965986</td>\n","      <td>81234.599886</td>\n","      <td>139.900157</td>\n","      <td>854.723605</td>\n","      <td>6.776852</td>\n","      <td>2.634721</td>\n","      <td>16.112585</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>36.184450</td>\n","      <td>159.701229</td>\n","      <td>3.065486e+07</td>\n","      <td>279.758733</td>\n","      <td>2.923206</td>\n","      <td>3.056276</td>\n","      <td>22.653445</td>\n","      <td>33236.599278</td>\n","      <td>279.564935</td>\n","      <td>953.118103</td>\n","      <td>2.195843</td>\n","      <td>0.809692</td>\n","      <td>8.949471</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1471.000000</td>\n","      <td>32.000000</td>\n","      <td>2.000000e+04</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>483.870968</td>\n","      <td>-219.000000</td>\n","      <td>-2.000000</td>\n","      <td>2.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>1485.000000</td>\n","      <td>181.000000</td>\n","      <td>1.260000e+06</td>\n","      <td>18.000000</td>\n","      <td>0.000000</td>\n","      <td>2.000000</td>\n","      <td>3.750000</td>\n","      <td>60000.000000</td>\n","      <td>18.000000</td>\n","      <td>276.994486</td>\n","      <td>5.000000</td>\n","      <td>2.000000</td>\n","      <td>8.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>1498.000000</td>\n","      <td>324.000000</td>\n","      <td>3.720000e+06</td>\n","      <td>50.000000</td>\n","      <td>0.000000</td>\n","      <td>3.000000</td>\n","      <td>10.350000</td>\n","      <td>79454.235180</td>\n","      <td>50.000000</td>\n","      <td>525.714286</td>\n","      <td>7.000000</td>\n","      <td>3.000000</td>\n","      <td>16.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>1556.000000</td>\n","      <td>474.000000</td>\n","      <td>1.110000e+07</td>\n","      <td>143.000000</td>\n","      <td>0.000000</td>\n","      <td>5.000000</td>\n","      <td>28.210000</td>\n","      <td>100000.000000</td>\n","      <td>143.000000</td>\n","      <td>1038.961039</td>\n","      <td>9.000000</td>\n","      <td>3.000000</td>\n","      <td>24.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1589.000000</td>\n","      <td>637.000000</td>\n","      <td>1.262820e+09</td>\n","      <td>8499.000000</td>\n","      <td>311.000000</td>\n","      <td>60.000000</td>\n","      <td>147.500000</td>\n","      <td>700000.000000</td>\n","      <td>8499.000000</td>\n","      <td>9692.097160</td>\n","      <td>11.000000</td>\n","      <td>4.000000</td>\n","      <td>31.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-413450bc-d1f9-4f80-b563-78e252f04b59')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-413450bc-d1f9-4f80-b563-78e252f04b59 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-413450bc-d1f9-4f80-b563-78e252f04b59');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-887df4df-76ae-4441-8092-2a05f585a98e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-887df4df-76ae-4441-8092-2a05f585a98e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-887df4df-76ae-4441-8092-2a05f585a98e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"film_code\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 49930.20119254515,\n        \"min\": 36.18445010350526,\n        \"max\": 142524.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1518.9851112795038,\n          1498.0,\n          142524.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cinema_code\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 50282.71488037264,\n        \"min\": 32.0,\n        \"max\": 142524.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          320.3784274929135,\n          324.0,\n          142524.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"total_sales\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 443599449.5677502,\n        \"min\": 20000.0,\n        \"max\": 1262819994.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          12347275.407531364,\n          3720000.0,\n          142524.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tickets_sold\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 50015.06031461156,\n        \"min\": 1.0,\n        \"max\": 142524.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          140.13756981280346,\n          50.0,\n          142524.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tickets_out\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 50374.09309995775,\n        \"min\": 0.0,\n        \"max\": 142524.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.23741264629115097,\n          311.0,\n          2.9232055587676697\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"show_time\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 50385.90839512732,\n        \"min\": 1.0,\n        \"max\": 142524.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          3.9321026634110745,\n          3.0,\n          142524.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"occu_perc\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 50333.93232536254,\n        \"min\": 0.0,\n        \"max\": 142399.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          19.965986348218742,\n          10.35,\n          142399.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ticket_price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 226415.81998449116,\n        \"min\": 483.8709677,\n        \"max\": 700000.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          81234.59988646851,\n          79454.23518,\n          142524.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ticket_use\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 50027.05394850988,\n        \"min\": -219.0,\n        \"max\": 142524.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          139.90015716651232,\n          50.0,\n          142524.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capacity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 49774.734269565895,\n        \"min\": -2.0,\n        \"max\": 142399.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          854.723605174043,\n          525.7142857,\n          142399.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"month\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 50387.673086962466,\n        \"min\": 2.0,\n        \"max\": 142524.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          6.776851617973113,\n          7.0,\n          142524.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"quarter\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 50389.01288392245,\n        \"min\": 0.809691905870941,\n        \"max\": 142524.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          142524.0,\n          2.6347211697678987,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"day\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 50384.53788592487,\n        \"min\": 1.0,\n        \"max\": 142524.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          16.112584547163987,\n          16.0,\n          142524.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["df.corr()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":457},"id":"bQgXQOr8qaDy","executionInfo":{"status":"ok","timestamp":1710685805208,"user_tz":-330,"elapsed":8,"user":{"displayName":"Manipal Reddy","userId":"17555613462873054626"}},"outputId":"8eb6b2db-1b56-4019-ac71-4e850550d04c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              film_code  cinema_code  total_sales  tickets_sold  tickets_out  \\\n","film_code      1.000000     0.029530     0.009802     -0.005588    -0.000920   \n","cinema_code    0.029530     1.000000    -0.012910     -0.053716     0.019534   \n","total_sales    0.009802    -0.012910     1.000000      0.915176     0.066810   \n","tickets_sold  -0.005588    -0.053716     0.915176      1.000000     0.071498   \n","tickets_out   -0.000920     0.019534     0.066810      0.071498     1.000000   \n","show_time      0.076670    -0.187125     0.509812      0.522088     0.078860   \n","occu_perc     -0.104120     0.125542     0.414418      0.493707     0.044407   \n","ticket_price   0.104820     0.005079     0.272450      0.103596     0.011916   \n","ticket_use    -0.005582    -0.053957     0.915112      0.999946     0.061091   \n","capacity       0.061224    -0.353402     0.376134      0.425468     0.037599   \n","month          0.851380     0.051027    -0.080568     -0.103477    -0.012448   \n","quarter        0.800933     0.049646    -0.051433     -0.062666    -0.007210   \n","day           -0.028686    -0.000270    -0.000424     -0.005037     0.004441   \n","\n","              show_time  occu_perc  ticket_price  ticket_use  capacity  \\\n","film_code      0.076670  -0.104120      0.104820   -0.005582  0.061224   \n","cinema_code   -0.187125   0.125542      0.005079   -0.053957 -0.353402   \n","total_sales    0.509812   0.414418      0.272450    0.915112  0.376134   \n","tickets_sold   0.522088   0.493707      0.103596    0.999946  0.425468   \n","tickets_out    0.078860   0.044407      0.011916    0.061091  0.037599   \n","show_time      1.000000   0.055617      0.176274    0.521625  0.681645   \n","occu_perc      0.055617   1.000000      0.084666    0.493585 -0.141262   \n","ticket_price   0.176274   0.084666      1.000000    0.103544  0.004287   \n","ticket_use     0.521625   0.493585      0.103544    1.000000  0.425370   \n","capacity       0.681645  -0.141262      0.004287    0.425370  1.000000   \n","month         -0.023297  -0.145100      0.048007   -0.103418 -0.025265   \n","quarter       -0.020643  -0.088856      0.042031   -0.062634 -0.023940   \n","day            0.007646  -0.011061      0.001113   -0.005087  0.006255   \n","\n","                 month   quarter       day  \n","film_code     0.851380  0.800933 -0.028686  \n","cinema_code   0.051027  0.049646 -0.000270  \n","total_sales  -0.080568 -0.051433 -0.000424  \n","tickets_sold -0.103477 -0.062666 -0.005037  \n","tickets_out  -0.012448 -0.007210  0.004441  \n","show_time    -0.023297 -0.020643  0.007646  \n","occu_perc    -0.145100 -0.088856 -0.011061  \n","ticket_price  0.048007  0.042031  0.001113  \n","ticket_use   -0.103418 -0.062634 -0.005087  \n","capacity     -0.025265 -0.023940  0.006255  \n","month         1.000000  0.942237 -0.161290  \n","quarter       0.942237  1.000000 -0.165723  \n","day          -0.161290 -0.165723  1.000000  "],"text/html":["\n","  <div id=\"df-3b6a97e2-ed3a-43bb-800b-8e18786c129d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>film_code</th>\n","      <th>cinema_code</th>\n","      <th>total_sales</th>\n","      <th>tickets_sold</th>\n","      <th>tickets_out</th>\n","      <th>show_time</th>\n","      <th>occu_perc</th>\n","      <th>ticket_price</th>\n","      <th>ticket_use</th>\n","      <th>capacity</th>\n","      <th>month</th>\n","      <th>quarter</th>\n","      <th>day</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>film_code</th>\n","      <td>1.000000</td>\n","      <td>0.029530</td>\n","      <td>0.009802</td>\n","      <td>-0.005588</td>\n","      <td>-0.000920</td>\n","      <td>0.076670</td>\n","      <td>-0.104120</td>\n","      <td>0.104820</td>\n","      <td>-0.005582</td>\n","      <td>0.061224</td>\n","      <td>0.851380</td>\n","      <td>0.800933</td>\n","      <td>-0.028686</td>\n","    </tr>\n","    <tr>\n","      <th>cinema_code</th>\n","      <td>0.029530</td>\n","      <td>1.000000</td>\n","      <td>-0.012910</td>\n","      <td>-0.053716</td>\n","      <td>0.019534</td>\n","      <td>-0.187125</td>\n","      <td>0.125542</td>\n","      <td>0.005079</td>\n","      <td>-0.053957</td>\n","      <td>-0.353402</td>\n","      <td>0.051027</td>\n","      <td>0.049646</td>\n","      <td>-0.000270</td>\n","    </tr>\n","    <tr>\n","      <th>total_sales</th>\n","      <td>0.009802</td>\n","      <td>-0.012910</td>\n","      <td>1.000000</td>\n","      <td>0.915176</td>\n","      <td>0.066810</td>\n","      <td>0.509812</td>\n","      <td>0.414418</td>\n","      <td>0.272450</td>\n","      <td>0.915112</td>\n","      <td>0.376134</td>\n","      <td>-0.080568</td>\n","      <td>-0.051433</td>\n","      <td>-0.000424</td>\n","    </tr>\n","    <tr>\n","      <th>tickets_sold</th>\n","      <td>-0.005588</td>\n","      <td>-0.053716</td>\n","      <td>0.915176</td>\n","      <td>1.000000</td>\n","      <td>0.071498</td>\n","      <td>0.522088</td>\n","      <td>0.493707</td>\n","      <td>0.103596</td>\n","      <td>0.999946</td>\n","      <td>0.425468</td>\n","      <td>-0.103477</td>\n","      <td>-0.062666</td>\n","      <td>-0.005037</td>\n","    </tr>\n","    <tr>\n","      <th>tickets_out</th>\n","      <td>-0.000920</td>\n","      <td>0.019534</td>\n","      <td>0.066810</td>\n","      <td>0.071498</td>\n","      <td>1.000000</td>\n","      <td>0.078860</td>\n","      <td>0.044407</td>\n","      <td>0.011916</td>\n","      <td>0.061091</td>\n","      <td>0.037599</td>\n","      <td>-0.012448</td>\n","      <td>-0.007210</td>\n","      <td>0.004441</td>\n","    </tr>\n","    <tr>\n","      <th>show_time</th>\n","      <td>0.076670</td>\n","      <td>-0.187125</td>\n","      <td>0.509812</td>\n","      <td>0.522088</td>\n","      <td>0.078860</td>\n","      <td>1.000000</td>\n","      <td>0.055617</td>\n","      <td>0.176274</td>\n","      <td>0.521625</td>\n","      <td>0.681645</td>\n","      <td>-0.023297</td>\n","      <td>-0.020643</td>\n","      <td>0.007646</td>\n","    </tr>\n","    <tr>\n","      <th>occu_perc</th>\n","      <td>-0.104120</td>\n","      <td>0.125542</td>\n","      <td>0.414418</td>\n","      <td>0.493707</td>\n","      <td>0.044407</td>\n","      <td>0.055617</td>\n","      <td>1.000000</td>\n","      <td>0.084666</td>\n","      <td>0.493585</td>\n","      <td>-0.141262</td>\n","      <td>-0.145100</td>\n","      <td>-0.088856</td>\n","      <td>-0.011061</td>\n","    </tr>\n","    <tr>\n","      <th>ticket_price</th>\n","      <td>0.104820</td>\n","      <td>0.005079</td>\n","      <td>0.272450</td>\n","      <td>0.103596</td>\n","      <td>0.011916</td>\n","      <td>0.176274</td>\n","      <td>0.084666</td>\n","      <td>1.000000</td>\n","      <td>0.103544</td>\n","      <td>0.004287</td>\n","      <td>0.048007</td>\n","      <td>0.042031</td>\n","      <td>0.001113</td>\n","    </tr>\n","    <tr>\n","      <th>ticket_use</th>\n","      <td>-0.005582</td>\n","      <td>-0.053957</td>\n","      <td>0.915112</td>\n","      <td>0.999946</td>\n","      <td>0.061091</td>\n","      <td>0.521625</td>\n","      <td>0.493585</td>\n","      <td>0.103544</td>\n","      <td>1.000000</td>\n","      <td>0.425370</td>\n","      <td>-0.103418</td>\n","      <td>-0.062634</td>\n","      <td>-0.005087</td>\n","    </tr>\n","    <tr>\n","      <th>capacity</th>\n","      <td>0.061224</td>\n","      <td>-0.353402</td>\n","      <td>0.376134</td>\n","      <td>0.425468</td>\n","      <td>0.037599</td>\n","      <td>0.681645</td>\n","      <td>-0.141262</td>\n","      <td>0.004287</td>\n","      <td>0.425370</td>\n","      <td>1.000000</td>\n","      <td>-0.025265</td>\n","      <td>-0.023940</td>\n","      <td>0.006255</td>\n","    </tr>\n","    <tr>\n","      <th>month</th>\n","      <td>0.851380</td>\n","      <td>0.051027</td>\n","      <td>-0.080568</td>\n","      <td>-0.103477</td>\n","      <td>-0.012448</td>\n","      <td>-0.023297</td>\n","      <td>-0.145100</td>\n","      <td>0.048007</td>\n","      <td>-0.103418</td>\n","      <td>-0.025265</td>\n","      <td>1.000000</td>\n","      <td>0.942237</td>\n","      <td>-0.161290</td>\n","    </tr>\n","    <tr>\n","      <th>quarter</th>\n","      <td>0.800933</td>\n","      <td>0.049646</td>\n","      <td>-0.051433</td>\n","      <td>-0.062666</td>\n","      <td>-0.007210</td>\n","      <td>-0.020643</td>\n","      <td>-0.088856</td>\n","      <td>0.042031</td>\n","      <td>-0.062634</td>\n","      <td>-0.023940</td>\n","      <td>0.942237</td>\n","      <td>1.000000</td>\n","      <td>-0.165723</td>\n","    </tr>\n","    <tr>\n","      <th>day</th>\n","      <td>-0.028686</td>\n","      <td>-0.000270</td>\n","      <td>-0.000424</td>\n","      <td>-0.005037</td>\n","      <td>0.004441</td>\n","      <td>0.007646</td>\n","      <td>-0.011061</td>\n","      <td>0.001113</td>\n","      <td>-0.005087</td>\n","      <td>0.006255</td>\n","      <td>-0.161290</td>\n","      <td>-0.165723</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3b6a97e2-ed3a-43bb-800b-8e18786c129d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3b6a97e2-ed3a-43bb-800b-8e18786c129d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3b6a97e2-ed3a-43bb-800b-8e18786c129d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-58afcd0c-375d-4d07-811d-5d5856d3bc3a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-58afcd0c-375d-4d07-811d-5d5856d3bc3a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-58afcd0c-375d-4d07-811d-5d5856d3bc3a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 13,\n  \"fields\": [\n    {\n      \"column\": \"film_code\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3874171007144245,\n        \"min\": -0.10412024704610508,\n        \"max\": 1.0,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          0.8009326789509461,\n          0.061223710984969044,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"cinema_code\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.31071282699325364,\n        \"min\": -0.3534023502363204,\n        \"max\": 1.0,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          0.0496459183198524,\n          -0.3534023502363204,\n          0.029529825409788067\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"total_sales\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3969733327866736,\n        \"min\": -0.0805679116441668,\n        \"max\": 1.0,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          -0.05143310573974647,\n          0.37613355610818106,\n          0.009802265706317686\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tickets_sold\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.42281193008787116,\n        \"min\": -0.10347687751810457,\n        \"max\": 1.0,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          -0.06266627460634504,\n          0.42546817177078533,\n          -0.005588193611339143\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"tickets_out\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.27051004618525826,\n        \"min\": -0.012448423568465837,\n        \"max\": 1.0,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          -0.007209584153208656,\n          0.03759896164887643,\n          -0.0009195306227095016\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"show_time\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.34913293669573964,\n        \"min\": -0.18712498672250472,\n        \"max\": 1.0,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          -0.020643436515461577,\n          0.6816448303441713,\n          0.07666976794998283\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"occu_perc\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.33755767074367726,\n        \"min\": -0.14510029535333818,\n        \"max\": 1.0,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          -0.08885550870141715,\n          -0.14126150430001405,\n          -0.10412024704610508\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ticket_price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2668223093063882,\n        \"min\": 0.001113276282597363,\n        \"max\": 1.0,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          0.04203111957799857,\n          0.004286779916880648,\n          0.10481964049021318\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ticket_use\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.423338812067847,\n        \"min\": -0.10341844470330247,\n        \"max\": 1.0,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          -0.06263433016944524,\n          0.42537022641351274,\n          -0.005582452546425424\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capacity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.3706406660777223,\n        \"min\": -0.3534023502363204,\n        \"max\": 1.0,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          -0.023940051706704418,\n          1.0,\n          0.061223710984969044\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"month\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.43862081955264315,\n        \"min\": -0.1612895469950107,\n        \"max\": 1.0,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          0.9422374709281932,\n          -0.025264721216438035,\n          0.8513797683022786\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"quarter\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.4237731434431794,\n        \"min\": -0.16572259308698573,\n        \"max\": 1.0,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          1.0,\n          -0.023940051706704418,\n          0.8009326789509461\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"day\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.2919618808194655,\n        \"min\": -0.16572259308698573,\n        \"max\": 1.0,\n        \"num_unique_values\": 13,\n        \"samples\": [\n          -0.16572259308698573,\n          0.006254947579888926,\n          -0.0286862994168075\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["plt.figure(figsize=(10,10))\n","sns.heatmap(df.corr(),annot=True, cmap='magma_r')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":913},"id":"m-4V7MZCqpu4","executionInfo":{"status":"ok","timestamp":1710685809523,"user_tz":-330,"elapsed":1583,"user":{"displayName":"Manipal Reddy","userId":"17555613462873054626"}},"outputId":"7c9ed110-d797-4e72-9a6e-ce5b2d3e4909"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x1000 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["df.isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xTRKWwQnqvdk","executionInfo":{"status":"ok","timestamp":1710685817582,"user_tz":-330,"elapsed":626,"user":{"displayName":"Manipal Reddy","userId":"17555613462873054626"}},"outputId":"0b844b6c-65de-4d16-b2a0-ac11d1eab275"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["film_code         0\n","cinema_code       0\n","total_sales       0\n","tickets_sold      0\n","tickets_out       0\n","show_time         0\n","occu_perc       125\n","ticket_price      0\n","ticket_use        0\n","capacity        125\n","date              0\n","month             0\n","quarter           0\n","day               0\n","dtype: int64"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["df.info()"],"metadata":{"id":"QCnz0I_0q25l","executionInfo":{"status":"ok","timestamp":1710685819733,"user_tz":-330,"elapsed":499,"user":{"displayName":"Manipal Reddy","userId":"17555613462873054626"}},"outputId":"4303ff84-af21-4e70-bf67-677754529d64","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 142524 entries, 0 to 142523\n","Data columns (total 14 columns):\n"," #   Column        Non-Null Count   Dtype  \n","---  ------        --------------   -----  \n"," 0   film_code     142524 non-null  int64  \n"," 1   cinema_code   142524 non-null  int64  \n"," 2   total_sales   142524 non-null  int64  \n"," 3   tickets_sold  142524 non-null  int64  \n"," 4   tickets_out   142524 non-null  int64  \n"," 5   show_time     142524 non-null  int64  \n"," 6   occu_perc     142399 non-null  float64\n"," 7   ticket_price  142524 non-null  float64\n"," 8   ticket_use    142524 non-null  int64  \n"," 9   capacity      142399 non-null  float64\n"," 10  date          142524 non-null  object \n"," 11  month         142524 non-null  int64  \n"," 12  quarter       142524 non-null  int64  \n"," 13  day           142524 non-null  int64  \n","dtypes: float64(3), int64(10), object(1)\n","memory usage: 15.2+ MB\n"]}]},{"cell_type":"code","source":["df['capacity'].fillna(df['capacity'].mean(),inplace=True)"],"metadata":{"id":"Gl8lkIa8aOya"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df['occu_perc'].fillna(df['occu_perc'].mean(),inplace=True)"],"metadata":{"id":"cNO1zqrFaXXp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df.isna().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"TdwLpolFasSJ","executionInfo":{"status":"ok","timestamp":1710685825218,"user_tz":-330,"elapsed":3,"user":{"displayName":"Manipal Reddy","userId":"17555613462873054626"}},"outputId":"c8d17fb3-6b1c-4890-d022-ccecd7eed867"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["film_code       0\n","cinema_code     0\n","total_sales     0\n","tickets_sold    0\n","tickets_out     0\n","show_time       0\n","occu_perc       0\n","ticket_price    0\n","ticket_use      0\n","capacity        0\n","date            0\n","month           0\n","quarter         0\n","day             0\n","dtype: int64"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["df.drop(['film_code','cinema_code','total_sales','tickets_sold','tickets_out','ticket_use','month','quarter','day'],axis=1,inplace=True)\n","\n"],"metadata":{"id":"_pWSqhYGasNC"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"DOJEiC9Ia949","executionInfo":{"status":"ok","timestamp":1710685830588,"user_tz":-330,"elapsed":924,"user":{"displayName":"Manipal Reddy","userId":"17555613462873054626"}},"outputId":"8ed68a16-494c-4032-9bf0-61bd201d5cb2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        show_time  occu_perc  ticket_price    capacity        date\n","0               4       4.26      150000.0  610.328639  05-05-2018\n","1               5       8.08       80000.0  519.801980  05-05-2018\n","2               4      20.00       80000.0  160.000000  05-05-2018\n","3               1      11.01      100000.0  108.991826  05-05-2018\n","4               3      16.67       80000.0   89.982004  05-05-2018\n","...           ...        ...           ...         ...         ...\n","142519          2       3.86       60000.0  569.948187  04-11-2018\n","142520          1      65.22       80000.0   22.999080  04-11-2018\n","142521          3       9.20      132500.0   86.956522  04-11-2018\n","142522          2       5.00      120000.0  100.000000  04-11-2018\n","142523          1       1.79       50000.0  279.329609  04-11-2018\n","\n","[142524 rows x 5 columns]"],"text/html":["\n","  <div id=\"df-e9c50852-f044-4327-a793-0cb17fb70893\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>show_time</th>\n","      <th>occu_perc</th>\n","      <th>ticket_price</th>\n","      <th>capacity</th>\n","      <th>date</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>4</td>\n","      <td>4.26</td>\n","      <td>150000.0</td>\n","      <td>610.328639</td>\n","      <td>05-05-2018</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5</td>\n","      <td>8.08</td>\n","      <td>80000.0</td>\n","      <td>519.801980</td>\n","      <td>05-05-2018</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4</td>\n","      <td>20.00</td>\n","      <td>80000.0</td>\n","      <td>160.000000</td>\n","      <td>05-05-2018</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>11.01</td>\n","      <td>100000.0</td>\n","      <td>108.991826</td>\n","      <td>05-05-2018</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3</td>\n","      <td>16.67</td>\n","      <td>80000.0</td>\n","      <td>89.982004</td>\n","      <td>05-05-2018</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>142519</th>\n","      <td>2</td>\n","      <td>3.86</td>\n","      <td>60000.0</td>\n","      <td>569.948187</td>\n","      <td>04-11-2018</td>\n","    </tr>\n","    <tr>\n","      <th>142520</th>\n","      <td>1</td>\n","      <td>65.22</td>\n","      <td>80000.0</td>\n","      <td>22.999080</td>\n","      <td>04-11-2018</td>\n","    </tr>\n","    <tr>\n","      <th>142521</th>\n","      <td>3</td>\n","      <td>9.20</td>\n","      <td>132500.0</td>\n","      <td>86.956522</td>\n","      <td>04-11-2018</td>\n","    </tr>\n","    <tr>\n","      <th>142522</th>\n","      <td>2</td>\n","      <td>5.00</td>\n","      <td>120000.0</td>\n","      <td>100.000000</td>\n","      <td>04-11-2018</td>\n","    </tr>\n","    <tr>\n","      <th>142523</th>\n","      <td>1</td>\n","      <td>1.79</td>\n","      <td>50000.0</td>\n","      <td>279.329609</td>\n","      <td>04-11-2018</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>142524 rows × 5 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e9c50852-f044-4327-a793-0cb17fb70893')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e9c50852-f044-4327-a793-0cb17fb70893 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e9c50852-f044-4327-a793-0cb17fb70893');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8eb72840-c5a6-492f-bdcb-fe80a2e55cf2\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8eb72840-c5a6-492f-bdcb-fe80a2e55cf2')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8eb72840-c5a6-492f-bdcb-fe80a2e55cf2 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_9d2f33ee-7a79-435c-ae2b-6105212cc75a\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_9d2f33ee-7a79-435c-ae2b-6105212cc75a button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df"}},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["\n","df.corr()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"ghHzh_ZCbkom","executionInfo":{"status":"ok","timestamp":1710685834926,"user_tz":-330,"elapsed":682,"user":{"displayName":"Manipal Reddy","userId":"17555613462873054626"}},"outputId":"834d5191-823f-4877-ff88-9e610eddca6f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              show_time  occu_perc  ticket_price  capacity\n","show_time      1.000000   0.055603      0.176274  0.681474\n","occu_perc      0.055603   1.000000      0.084631 -0.141262\n","ticket_price   0.176274   0.084631      1.000000  0.004285\n","capacity       0.681474  -0.141262      0.004285  1.000000"],"text/html":["\n","  <div id=\"df-fc2e584d-5882-48a9-ac4e-47fbce027c24\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>show_time</th>\n","      <th>occu_perc</th>\n","      <th>ticket_price</th>\n","      <th>capacity</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>show_time</th>\n","      <td>1.000000</td>\n","      <td>0.055603</td>\n","      <td>0.176274</td>\n","      <td>0.681474</td>\n","    </tr>\n","    <tr>\n","      <th>occu_perc</th>\n","      <td>0.055603</td>\n","      <td>1.000000</td>\n","      <td>0.084631</td>\n","      <td>-0.141262</td>\n","    </tr>\n","    <tr>\n","      <th>ticket_price</th>\n","      <td>0.176274</td>\n","      <td>0.084631</td>\n","      <td>1.000000</td>\n","      <td>0.004285</td>\n","    </tr>\n","    <tr>\n","      <th>capacity</th>\n","      <td>0.681474</td>\n","      <td>-0.141262</td>\n","      <td>0.004285</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fc2e584d-5882-48a9-ac4e-47fbce027c24')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fc2e584d-5882-48a9-ac4e-47fbce027c24 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fc2e584d-5882-48a9-ac4e-47fbce027c24');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-95defc35-2b6f-4d75-af56-8d1d9fa9b53f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-95defc35-2b6f-4d75-af56-8d1d9fa9b53f')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-95defc35-2b6f-4d75-af56-8d1d9fa9b53f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 4,\n  \"fields\": [\n    {\n      \"column\": \"show_time\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.44096209528499386,\n        \"min\": 0.055603280575659594,\n        \"max\": 1.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.055603280575659594,\n          0.6814744468933436,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"occu_perc\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5101380082802595,\n        \"min\": -0.1412615043000123,\n        \"max\": 1.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          1.0,\n          -0.1412615043000123,\n          0.055603280575659594\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ticket_price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.46118573226271514,\n        \"min\": 0.004284999426258429,\n        \"max\": 1.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          0.08463078547161038,\n          0.004284999426258429,\n          0.17627441873411265\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"capacity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5440625338935734,\n        \"min\": -0.1412615043000123,\n        \"max\": 1.0,\n        \"num_unique_values\": 4,\n        \"samples\": [\n          -0.1412615043000123,\n          1.0,\n          0.6814744468933436\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["df_num=df.select_dtypes(['int64','float64'])\n","df_cat=df.select_dtypes(object)"],"metadata":{"id":"vn9lxtjzbkYN"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["df_cat"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"eoEsvaAfbkCO","executionInfo":{"status":"ok","timestamp":1710685838711,"user_tz":-330,"elapsed":15,"user":{"displayName":"Manipal Reddy","userId":"17555613462873054626"}},"outputId":"107577b6-40a6-402a-fcd5-b9ef7dca4bb2"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              date\n","0       05-05-2018\n","1       05-05-2018\n","2       05-05-2018\n","3       05-05-2018\n","4       05-05-2018\n","...            ...\n","142519  04-11-2018\n","142520  04-11-2018\n","142521  04-11-2018\n","142522  04-11-2018\n","142523  04-11-2018\n","\n","[142524 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-2592ebe5-5e17-4436-a817-d2f4d75132af\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>date</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>05-05-2018</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>05-05-2018</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>05-05-2018</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>05-05-2018</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>05-05-2018</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>142519</th>\n","      <td>04-11-2018</td>\n","    </tr>\n","    <tr>\n","      <th>142520</th>\n","      <td>04-11-2018</td>\n","    </tr>\n","    <tr>\n","      <th>142521</th>\n","      <td>04-11-2018</td>\n","    </tr>\n","    <tr>\n","      <th>142522</th>\n","      <td>04-11-2018</td>\n","    </tr>\n","    <tr>\n","      <th>142523</th>\n","      <td>04-11-2018</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>142524 rows × 1 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2592ebe5-5e17-4436-a817-d2f4d75132af')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2592ebe5-5e17-4436-a817-d2f4d75132af button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2592ebe5-5e17-4436-a817-d2f4d75132af');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-1d578be7-46a7-4123-9de7-a272dd6f05a8\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1d578be7-46a7-4123-9de7-a272dd6f05a8')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-1d578be7-46a7-4123-9de7-a272dd6f05a8 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_9a0497f9-6481-4842-9702-dc145f3573e9\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_cat')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_9a0497f9-6481-4842-9702-dc145f3573e9 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_cat');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_cat"}},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["\n","df_num"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"hlyUARrQbwhJ","executionInfo":{"status":"ok","timestamp":1710685842002,"user_tz":-330,"elapsed":576,"user":{"displayName":"Manipal Reddy","userId":"17555613462873054626"}},"outputId":"250c1350-15de-48cb-b905-6a9321778bbd"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        show_time  occu_perc  ticket_price    capacity\n","0               4       4.26      150000.0  610.328639\n","1               5       8.08       80000.0  519.801980\n","2               4      20.00       80000.0  160.000000\n","3               1      11.01      100000.0  108.991826\n","4               3      16.67       80000.0   89.982004\n","...           ...        ...           ...         ...\n","142519          2       3.86       60000.0  569.948187\n","142520          1      65.22       80000.0   22.999080\n","142521          3       9.20      132500.0   86.956522\n","142522          2       5.00      120000.0  100.000000\n","142523          1       1.79       50000.0  279.329609\n","\n","[142524 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-5473d38d-30de-4231-a82a-e0dcce524365\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>show_time</th>\n","      <th>occu_perc</th>\n","      <th>ticket_price</th>\n","      <th>capacity</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>4</td>\n","      <td>4.26</td>\n","      <td>150000.0</td>\n","      <td>610.328639</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5</td>\n","      <td>8.08</td>\n","      <td>80000.0</td>\n","      <td>519.801980</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4</td>\n","      <td>20.00</td>\n","      <td>80000.0</td>\n","      <td>160.000000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>11.01</td>\n","      <td>100000.0</td>\n","      <td>108.991826</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3</td>\n","      <td>16.67</td>\n","      <td>80000.0</td>\n","      <td>89.982004</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>142519</th>\n","      <td>2</td>\n","      <td>3.86</td>\n","      <td>60000.0</td>\n","      <td>569.948187</td>\n","    </tr>\n","    <tr>\n","      <th>142520</th>\n","      <td>1</td>\n","      <td>65.22</td>\n","      <td>80000.0</td>\n","      <td>22.999080</td>\n","    </tr>\n","    <tr>\n","      <th>142521</th>\n","      <td>3</td>\n","      <td>9.20</td>\n","      <td>132500.0</td>\n","      <td>86.956522</td>\n","    </tr>\n","    <tr>\n","      <th>142522</th>\n","      <td>2</td>\n","      <td>5.00</td>\n","      <td>120000.0</td>\n","      <td>100.000000</td>\n","    </tr>\n","    <tr>\n","      <th>142523</th>\n","      <td>1</td>\n","      <td>1.79</td>\n","      <td>50000.0</td>\n","      <td>279.329609</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>142524 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5473d38d-30de-4231-a82a-e0dcce524365')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5473d38d-30de-4231-a82a-e0dcce524365 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5473d38d-30de-4231-a82a-e0dcce524365');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-caf5f6c9-904c-4a49-a075-0355cef9ca65\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-caf5f6c9-904c-4a49-a075-0355cef9ca65')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-caf5f6c9-904c-4a49-a075-0355cef9ca65 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_3d7b36ae-788b-4934-a433-42cbf34f3330\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_num')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_3d7b36ae-788b-4934-a433-42cbf34f3330 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df_num');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df_num"}},"metadata":{},"execution_count":22}]},{"cell_type":"code","source":["\n","le=LabelEncoder()\n","df_cat['date']=le.fit_transform(df_cat['date'])"],"metadata":{"id":"Cd0ad4nkb1lY"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["\n","df_new=pd.concat([df_num,df_cat],axis=1)"],"metadata":{"id":"nElkISUfb4jo"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x=df_new.drop(['ticket_price'],axis=1)\n","y=df_new['ticket_price']\n"],"metadata":{"id":"_fr9KmjVb7_S"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["x"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"s5OvXTBTb_Lf","executionInfo":{"status":"ok","timestamp":1710685871956,"user_tz":-330,"elapsed":723,"user":{"displayName":"Manipal Reddy","userId":"17555613462873054626"}},"outputId":"2d9fccf3-6376-4a6f-c5b4-48c53f029840"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        show_time  occu_perc    capacity  date\n","0               4       4.26  610.328639    32\n","1               5       8.08  519.801980    32\n","2               4      20.00  160.000000    32\n","3               1      11.01  108.991826    32\n","4               3      16.67   89.982004    32\n","...           ...        ...         ...   ...\n","142519          2       3.86  569.948187    30\n","142520          1      65.22   22.999080    30\n","142521          3       9.20   86.956522    30\n","142522          2       5.00  100.000000    30\n","142523          1       1.79  279.329609    30\n","\n","[142524 rows x 4 columns]"],"text/html":["\n","  <div id=\"df-a012fda4-8b15-421f-8f77-529cbd7508aa\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>show_time</th>\n","      <th>occu_perc</th>\n","      <th>capacity</th>\n","      <th>date</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>4</td>\n","      <td>4.26</td>\n","      <td>610.328639</td>\n","      <td>32</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>5</td>\n","      <td>8.08</td>\n","      <td>519.801980</td>\n","      <td>32</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>4</td>\n","      <td>20.00</td>\n","      <td>160.000000</td>\n","      <td>32</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>1</td>\n","      <td>11.01</td>\n","      <td>108.991826</td>\n","      <td>32</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3</td>\n","      <td>16.67</td>\n","      <td>89.982004</td>\n","      <td>32</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>142519</th>\n","      <td>2</td>\n","      <td>3.86</td>\n","      <td>569.948187</td>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>142520</th>\n","      <td>1</td>\n","      <td>65.22</td>\n","      <td>22.999080</td>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>142521</th>\n","      <td>3</td>\n","      <td>9.20</td>\n","      <td>86.956522</td>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>142522</th>\n","      <td>2</td>\n","      <td>5.00</td>\n","      <td>100.000000</td>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>142523</th>\n","      <td>1</td>\n","      <td>1.79</td>\n","      <td>279.329609</td>\n","      <td>30</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>142524 rows × 4 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a012fda4-8b15-421f-8f77-529cbd7508aa')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a012fda4-8b15-421f-8f77-529cbd7508aa button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a012fda4-8b15-421f-8f77-529cbd7508aa');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-04bb63c5-5d78-4bc6-962e-ef5348e64ab5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-04bb63c5-5d78-4bc6-962e-ef5348e64ab5')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-04bb63c5-5d78-4bc6-962e-ef5348e64ab5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_284bbe71-f9f4-412e-95e7-bc96010f3396\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('x')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_284bbe71-f9f4-412e-95e7-bc96010f3396 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('x');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"x"}},"metadata":{},"execution_count":26}]},{"cell_type":"code","source":["y"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"A2GgHqLVcD1m","executionInfo":{"status":"ok","timestamp":1710685875618,"user_tz":-330,"elapsed":5,"user":{"displayName":"Manipal Reddy","userId":"17555613462873054626"}},"outputId":"b7f6a61f-2c9d-4e1a-efe3-b1f7f3099122"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0         150000.0\n","1          80000.0\n","2          80000.0\n","3         100000.0\n","4          80000.0\n","            ...   \n","142519     60000.0\n","142520     80000.0\n","142521    132500.0\n","142522    120000.0\n","142523     50000.0\n","Name: ticket_price, Length: 142524, dtype: float64"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","source":["xtrain,xtest,ytrain,ytest=train_test_split(x,y,test_size=0.3,random_state=123)"],"metadata":{"id":"ulluUao4cHyL"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["lr= LinearRegression()\n","lr.fit(xtrain,ytrain)\n","yhat=lr.predict(xtest)\n","residual=ytest-yhat\n","sns.distplot(residual)\n","print(\"R2 Score\",r2_score(ytest,yhat))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":482},"id":"GNnMyRXccMRp","executionInfo":{"status":"ok","timestamp":1710685883509,"user_tz":-330,"elapsed":1585,"user":{"displayName":"Manipal Reddy","userId":"17555613462873054626"}},"outputId":"793515a4-07fc-4812-94dc-68753eec268b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["R2 Score 0.05616350671650705\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["for i in range(2,9):\n","  pf=PolynomialFeatures(i)\n","  x_poly=pf.fit_transform(x)\n","  xtrain,xtest,ytrain,ytest=train_test_split(x_poly,y,test_size=0.3,random_state=123)\n","  lr= LinearRegression()\n","  lr.fit(xtrain,ytrain)\n","  yhat=lr.predict(xtest)\n","  print(\"R2 Score \",i,\" \",r2_score(ytest,yhat))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"V8FzWn-RcSh9","executionInfo":{"status":"ok","timestamp":1710685954743,"user_tz":-330,"elapsed":31447,"user":{"displayName":"Manipal Reddy","userId":"17555613462873054626"}},"outputId":"91eefb27-6ae6-43f9-94b9-5d6481b593b3"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["R2 Score  2   0.07580281901043295\n","R2 Score  3   0.09645939752207322\n","R2 Score  4   0.09645484310485486\n","R2 Score  5   0.08770603424368273\n","R2 Score  6   0.06021659090390585\n","R2 Score  7   -0.006112188284700171\n","R2 Score  8   -0.08114219240373677\n"]}]},{"cell_type":"code","source":["pf=PolynomialFeatures(4)\n","x_poly=pf.fit_transform(x)\n","xtrain,xtest,ytrain,ytest=train_test_split(x_poly,y,test_size=0.3,random_state=123)\n","lr= LinearRegression()\n","lr.fit(xtrain,ytrain)\n","yhat=lr.predict(xtest)\n","residuals=ytest-yhat\n","sns.distplot(residuals)\n","print(\"R2 Score \",i,\" \",r2_score(ytest,yhat))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":482},"id":"tSmt65L7cXBT","executionInfo":{"status":"ok","timestamp":1710686000462,"user_tz":-330,"elapsed":6212,"user":{"displayName":"Manipal Reddy","userId":"17555613462873054626"}},"outputId":"45358e41-f09e-42c9-baef-a7a0a268630d"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["R2 Score  8   0.09645484310485486\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["xgb=XGBRegressor(base_estinamtor=LinearRegression())\n","xtrain,xtest,ytrain,ytest=train_test_split(x,y,test_size=0.3,random_state=123)\n","xgb.fit(xtrain,ytrain)\n","yhat=xgb.predict(xtest)\n","residuals=ytest-yhat\n","sns.distplot(residuals)\n","print(\"R2 Score \",i,\" \",r2_score(ytest,yhat))"],"metadata":{"id":"H5LIIs_UcdSe","executionInfo":{"status":"ok","timestamp":1710686036692,"user_tz":-330,"elapsed":6797,"user":{"displayName":"Manipal Reddy","userId":"17555613462873054626"}},"outputId":"211b5974-c7f8-4f49-d3b0-1e849700fd93","colab":{"base_uri":"https://localhost:8080/","height":482}},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["R2 Score  8   0.504524517312045\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]}]}